/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL)    return head;
        ListNode *prev = head, *odd=NULL, *temp = head, *otemp = NULL;
        int count = 0;
        
        while(temp != NULL){
            if(count%2 != 0){
                if(odd == NULL){
                    odd = temp;
                    otemp = odd;
                    temp = temp->next;
                    odd->next = NULL;
                } 
                else{
                    otemp->next = temp;
                    otemp = otemp->next;
                    temp = temp->next;
                    otemp->next = NULL;
                }
                prev->next = temp;
            }
            else{
                prev = temp;
                temp = temp->next;
            }   
            count++;
        }
        prev->next = odd;

        return head;
    }
};
