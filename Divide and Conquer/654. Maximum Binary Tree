/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        if(nums.size()==0)
        {return NULL;}


        int g=0,maxi;
        TreeNode* root = new TreeNode;
        for(int i=0 ; i<nums.size() ; i++)
        {
            if(g<=nums[i])
            {
                g=nums[i];
                maxi = i;
            }   
        }
        root->val=g;
        root->left = NULL;
        root->right = NULL;
        vector<int> left;
        vector<int> right;
        for(int j=0; j<maxi ; j++)  left.push_back(nums[j]);
        for(int k=maxi+1; k<nums.size() ; k++)  right.push_back(nums[k]);

        root->left = constructMaximumBinaryTree(left);
        root->right = constructMaximumBinaryTree(right);     
        return root;
    }
};
