/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<TreeNode*> q;
        int max_sum=root->val,count=1,tcount=1,sum=0,level=1,max_level=1;

        q.push(root);
        while(!q.empty()){
            tcount = count;
            count = 0;
            sum=0;
            while(tcount>0){
                if(q.front()->left != NULL){
                    sum+= q.front()->left->val;
                    q.push(q.front()->left);
                    count++;
                } 
                if(q.front()->right != NULL){
                    sum+= q.front()->right->val;
                    q.push(q.front()->right);
                    count++;
                }
                q.pop();
                tcount--;
            }
            level++;
            cout<<level<<" "<<sum<<endl;
            if(max_sum < sum && count > 0){
                max_sum = sum;
                max_level = level;
            }  
        }

        return max_level;
    }
};
