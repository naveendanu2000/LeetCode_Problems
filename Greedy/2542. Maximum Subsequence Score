class Solution
{
public:
    long long maxScore(vector<int> &nums1, vector<int> &nums2, int k)
    {
        vector<pair<int, int>> v;
        priority_queue<int, vector<int>, greater<int>> pq;

        long long sum = 0;
        long long result = 0;

        for (int i = 0; i < nums1.size(); i++)
            v.push_back({nums1[i], nums2[i]});
            
        sort(v.begin(), v.end(),[](auto a, auto b){
            return a.second > b.second;
        });
        for (int i = 0; i < k - 1; i++)
        {
            pq.push(v[i].first);
            sum += v[i].first;
        }
        for (int i = k - 1; i < nums1.size(); i++)
        {
            result = max(result, (long long)((sum + v[i].first) * v[i].second));
            pq.push(v[i].first);
            sum += v[i].first;
            if (pq.size() == k)
            {
                sum -= pq.top();
                pq.pop();
            }
        }
        return result;
    }
};
