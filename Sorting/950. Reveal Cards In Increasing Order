class Solution {
public:
    vector<int> deckRevealedIncreasing(vector<int>& deck) {
        queue<int> q;
        vector<int> v;
        int temp;
        sort(deck.begin(),deck.end());
        if(deck.size() < 3) return deck;
        q.push(deck[deck.size() - 1]);
        q.push(deck[deck.size() - 2]);

        for(int i=deck.size()-3; i>=0; i--){
            temp = q.front();
            q.pop();
            q.push(temp);
            q.push(deck[i]);
        }

        while(!q.empty()){
            v.push_back(q.front());
            q.pop();
        }

        reverse(v.begin(),v.end());

        return v;
    }
};
