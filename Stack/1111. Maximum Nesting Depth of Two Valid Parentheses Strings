class Solution {
public:
    vector<int> maxDepthAfterSplit(string seq) {
        vector<char> parantheses;
        int max_depth=0;
        for(auto x:seq){
            if(x == '(')    parantheses.push_back(x);
            else parantheses.pop_back();
            max_depth = max(max_depth,int(parantheses.size()));
        }

        vector<int> ans;
        parantheses.clear();
        cout<<max_depth;
        for(auto x:seq){
            if(x == '('){
                parantheses.push_back(x);
                if(parantheses.size()<= max_depth/2)  ans.push_back(0);
                else ans.push_back(1);
            }    
            else{
                if(parantheses.size()<= max_depth/2)  ans.push_back(0);
                else ans.push_back(1);
                parantheses.pop_back();

            } 
        }

        return ans;
    }
};
