class SmallestInfiniteSet {
public:

    priority_queue <int , vector<int> , greater<int>> p;
    SmallestInfiniteSet() {
        p.push(1);
    }
    
    int popSmallest() {
        int x=0;
  
            x = p.top();
            p.pop();

            if(p.empty())
            {
                p.push(x+1);
            }

        return x;
    }
    
    void addBack(int num) {
        vector<int> x; 

        if(num < p.top())
        {
            p.push(num);
        }
        else
        {
            while(!p.empty())
            {
                if(p.top() >= num)
                {
                    break;
                }
                else
                {
                    x.push_back(p.top());
                    p.pop();
                }
            }

            if(!p.empty() && p.top() > num)
            {
                p.push(num);
            }

            for(auto a : x)
            {
                p.push(a);
            }
            x.clear();
        }
    }
};

/**
 * Your SmallestInfiniteSet object will be instantiated and called as such:
 * SmallestInfiniteSet* obj = new SmallestInfiniteSet();
 * int param_1 = obj->popSmallest();
 * obj->addBack(num);
 */
